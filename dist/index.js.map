{
  "version": 3,
  "sources": ["../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar realf = require( '@stdlib/complex-float32-real' );\nvar imagf = require( '@stdlib/complex-float32-imag' );\nvar Complex64 = require( '@stdlib/complex-float32-ctor' );\n\n\n// MAIN //\n\n/**\n* Negates a single-precision complex floating-point number.\n*\n* @param {Complex64} z - complex number\n* @returns {Complex64} result\n*\n* @example\n* var Complex64 = require( '@stdlib/complex-float32-ctor' );\n*\n* var z = new Complex64( -4.2, 5.5 );\n*\n* var out = cnegf( z );\n* // returns <Complex64>[ ~4.2, -5.5 ]\n*\n* @example\n* var Complex64 = require( '@stdlib/complex-float32-ctor' );\n*\n* var z = new Complex64( 0.0, 0.0 );\n*\n* var out = cnegf( z );\n* // returns <Complex64>[ -0.0, -0.0 ]\n*\n* @example\n* var Complex64 = require( '@stdlib/complex-float32-ctor' );\n*\n* var z = new Complex64( NaN, NaN );\n*\n* var out = cnegf( z );\n* // returns <Complex64>[ NaN, NaN ]\n*/\nfunction cnegf( z ) {\n\treturn new Complex64( -realf( z ), -imagf( z ) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = cnegf;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Negate a single-precision complex floating-point number.\n*\n* @module @stdlib/complex-float32-base-neg\n*\n* @example\n* var Complex64 = require( '@stdlib/complex-float32-ctor' );\n* var cnegf = require( '@stdlib/complex-float32-base-neg' );\n*\n* var z = new Complex64( -4.0, 5.0 );\n*\n* var out = cnegf( z );\n* // returns <Complex64>[ 4.0, -5.0 ]\n*\n* @example\n* var Complex64 = require( '@stdlib/complex-float32-ctor' );\n* var cnegf = require( '@stdlib/complex-float32-base-neg' );\n*\n* var z = new Complex64( 0.0, 0.0 );\n*\n* var out = cnegf( z );\n* // returns <Complex64>[ -0.0, -0.0 ]\n*\n* @example\n* var Complex64 = require( '@stdlib/complex-float32-ctor' );\n* var cnegf = require( '@stdlib/complex-float32-base-neg' );\n*\n* var z = new Complex64( NaN, NaN );\n*\n* var out = cnegf( z );\n* // returns <Complex64>[ NaN, NaN ]\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],
  "mappings": "uGAAA,IAAAA,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAQ,QAAS,8BAA+B,EAChDC,EAAQ,QAAS,8BAA+B,EAChDC,EAAY,QAAS,8BAA+B,EAmCxD,SAASC,EAAOC,EAAI,CACnB,OAAO,IAAIF,EAAW,CAACF,EAAOI,CAAE,EAAG,CAACH,EAAOG,CAAE,CAAE,CAChD,CAKAL,EAAO,QAAUI,ICXjB,IAAIE,EAAO,IAKX,OAAO,QAAUA",
  "names": ["require_main", "__commonJSMin", "exports", "module", "realf", "imagf", "Complex64", "cnegf", "z", "main"]
}
